version: 3

vars:
  COVER_FILE: cover.out
  VERSION_FILE: VERSION
  VERSION_GO_FILE: version.go

tasks:
  test:run:
    vars:
      TIMEOUT: 10s
    cmds:
      - go test -v -timeout {{.TIMEOUT}} -coverprofile={{.COVER_FILE}} .
  
  test:coverage:
    cmds:
      - go tool cover -html={{.COVER_FILE}}
  
  version:bump:
    vars:
      OLD_VERSION: $(cat {{.VERSION_FILE}})
      NEW_VERSION: $(bash ./tools/semver.sh bump patch {{.OLD_VERSION}})
    cmds:
      - echo "Bumping version from {{.OLD_VERSION}} to {{.NEW_VERSION}}"
      - echo {{.NEW_VERSION}} > {{.VERSION_FILE}}.tmp && mv {{.VERSION_FILE}}.tmp {{.VERSION_FILE}}
      - task: version:write-go
      - task: version:tag
  
  version:write-go:
    internal: true
    cmds:
      - echo "// Code generated by Taskfile; DO NOT EDIT."  > {{.VERSION_GO_FILE}}
      - echo "package csvadapter"                            >> {{.VERSION_GO_FILE}}
      - echo ""                                              >> {{.VERSION_GO_FILE}}
      - echo "const Version = \"v$(cat {{.VERSION_FILE}})\"" >> {{.VERSION_GO_FILE}}
  
  version:tag:
    internal: true
    cmds:
      - git add {{.VERSION_FILE}} {{.VERSION_GO_FILE}}
      - git commit -m "Bump version to v$(cat {{.VERSION_FILE}})"
      - git tag -a v$(cat {{.VERSION_FILE}}) -m "Release v$(cat {{.VERSION_FILE}})"
      - git push origin
      - git push origin v$(cat {{.VERSION_FILE}})